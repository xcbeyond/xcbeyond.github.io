<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xcbeyond</title>
    <link>https://xcbeyond.cn/</link>
    <description>Recent content on xcbeyond</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Copyright &amp;copy; 2021-2023 xcbeyond 版权所有.</copyright>
    <lastBuildDate>Sat, 09 Mar 2030 15:27:17 +0600</lastBuildDate><atom:link href="https://xcbeyond.cn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Social media and behavior economics conference</title>
      <link>https://xcbeyond.cn/event/event-1/</link>
      <pubDate>Sat, 09 Mar 2030 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/event/event-1/</guid>
      <description>About Event Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Social media and behavior economics conference</title>
      <link>https://xcbeyond.cn/event/event-2/</link>
      <pubDate>Sat, 09 Mar 2030 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/event/event-2/</guid>
      <description>About Event Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Social media and behavior economics conference</title>
      <link>https://xcbeyond.cn/event/event-3/</link>
      <pubDate>Sat, 09 Mar 2030 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/event/event-3/</guid>
      <description>About Event Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Social media and behavior economics conference</title>
      <link>https://xcbeyond.cn/event/event-4/</link>
      <pubDate>Sat, 09 Mar 2030 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/event/event-4/</guid>
      <description>About Event Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Social media and behavior economics conference</title>
      <link>https://xcbeyond.cn/event/event-5/</link>
      <pubDate>Sat, 09 Mar 2030 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/event/event-5/</guid>
      <description>About Event Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Social media and behavior economics conference</title>
      <link>https://xcbeyond.cn/event/event-6/</link>
      <pubDate>Sat, 09 Mar 2030 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/event/event-6/</guid>
      <description>About Event Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Java应用中各类环境变量的优先级及最佳实践</title>
      <link>https://xcbeyond.cn/blog/java/priorities-and-best-practices-for-various-environment-variables-in-java-applications/</link>
      <pubDate>Thu, 08 Feb 2024 14:53:42 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/java/priorities-and-best-practices-for-various-environment-variables-in-java-applications/</guid>
      <description>1.引言 Java应用程序的开发和部署过程中，合理利用各类环境变量是关键之一。不同类型的环境变量，如系统环境变量、进程级环境变量、Java启动参数设置的系统属性以及Spring Boot配置文件中的环境变量，它们之间存在优先级差异。
深入理解这些环境变量的优先级关系，将使得Java应用程序更加灵活和易于维护。本文将详细介绍这些环境变量的优先级，结合实际场景提供最佳实践，以帮助开发人员更好地配置和管理Java应用程序。
2. 环境变量 2.1 系统环境变量 系统环境变量是操作系统层面的配置项，全局可见。Java应用程序会继承这些系统环境变量，但不会直接使用。这一层级的环境变量通常用于设置操作系统的全局配置，而不是针对某个具体的Java应用。
示例： 假设在操作系统中设置了一个名为 JAVA_HOME 的系统环境变量，指向Java的安装目录。尽管Java应用程序继承了这个变量，但它并不直接用于应用程序的特定配置。</description>
    </item>
    
    <item>
      <title>深入了解 Ansible：全面掌握自动化 IT 环境的利器</title>
      <link>https://xcbeyond.cn/blog/others/learn-more-about-ansible-the-power-to-fully-automate-your-it-environment/</link>
      <pubDate>Wed, 07 Feb 2024 16:49:37 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/others/learn-more-about-ansible-the-power-to-fully-automate-your-it-environment/</guid>
      <description>本文以详尽的篇幅介绍了 Ansible 的方方面面，旨在帮助读者从入门到精通。无论您是初学者还是有一定经验的 Ansible 用户，都可以在本文中找到对应的内容，加深对 Ansible 的理解和应用。愿本文能成为您在 Ansible 自动化旅程中的良师益友！
1. 引言 在当今复杂的 IT 环境中，自动化变得愈发重要。Ansible 是一款备受欢迎的自动化工具，它能够简化配置管理、应用程序部署和任务自动化等方面的工作。本文将深入探讨 Ansible 的各个方面，从基础概念到高级用法，帮助您全面掌握这个强大的工具。</description>
    </item>
    
    <item>
      <title>Java性能分析中常用命令和工具</title>
      <link>https://xcbeyond.cn/blog/performance/common-commands-for-java-performance-analysis/</link>
      <pubDate>Sat, 19 Aug 2023 21:21:08 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/performance/common-commands-for-java-performance-analysis/</guid>
      <description>当涉及到 Java 性能分析时，有一系列强大的命令和工具可以帮助开发人员分析应用程序的性能瓶颈、内存使用情况和线程问题。以下是一些常用的 Java 性能分析命令和工具，以及它们的详细说明和示例。
以下是一些常用的性能分析命令和工具汇总：
   命令 功能简述     jps 用于查看正在运行的 Java 进程的状态信息。   jinfo 用于查看和修改正在运行的 Java 进程的 Java 虚拟机（JVM）参数和系统属性。   jstack 用于生成 Java 进程的线程转储信息。   jmap 用于生成 Java 进程的内存映射信息。   jconsole 是 Java 自带的监控和管理控制台，它提供了一个图形化界面，允许您监视和管理正在运行的 Java 应用程序的性能和资源使用情况。   jvisualvm 是一款功能强大的多合一故障诊断和性能监控的图形化工具。    1、jps jps （JVM Process Status Tool）命令用于查看正在运行的 Java 进程的状态信息，包括进程 ID 和主类名。这对于迅速了解系统上正在运行的 Java 应用程序很有帮助。</description>
    </item>
    
    <item>
      <title>Linux系统下的性能分析命令</title>
      <link>https://xcbeyond.cn/blog/performance/performance-analysis-commands-in-linux/</link>
      <pubDate>Sun, 13 Aug 2023 21:48:06 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/performance/performance-analysis-commands-in-linux/</guid>
      <description>在 Linux 系统下，有许多用于性能分析和调试的命令和工具，可以帮助您识别系统瓶颈、优化性能以及调查问题。本文将介绍在性能分析过程中，可能使用到的一些命令。
以下是一些常用的性能分析命令和工具汇总：
   命令 功能简述     top 用于实时监视系统中运行的进程和系统性能指标，如CPU使用率、内存使用率等。   nmon 一个性能监控工具，提供实时的系统性能数据，包括CPU、内存、磁盘、网络等信息。   lsof 用于列出打开的文件和网络连接，可以用于查找资源泄漏和不正常的连接。   pidstat 用于监视进程级别的CPU、内存、IO等性能数据。   vmstat 用于显示系统的虚拟内存、进程、CPU活动和IO统计信息。   iostat 用于监视系统磁盘和IO性能，提供关于磁盘活动的信息。   tcpdump 用于抓取网络数据包，对于网络性能分析和故障排除非常有用。    1、top top 命令是 Linux 系统下常用的性能分析工具，能够实时显示系统中各个进程的资源占用情况，如：CPU 使用率、内存使用率等。</description>
    </item>
    
    <item>
      <title>Golang项目中如何轻松实现私有仓库pkg包的引入</title>
      <link>https://xcbeyond.cn/blog/golang/how-to-easily-introduce-private-pkg-packages-in-the-golang-project/</link>
      <pubDate>Sat, 12 Aug 2023 22:06:36 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/golang/how-to-easily-introduce-private-pkg-packages-in-the-golang-project/</guid>
      <description>在企业内部创建一个公共的Golang模块工程可以帮助提高代码复用性和开发效率。本文将从如何创建一个公共的Golang工程开始，指导你一步步创建它、并引入到你的工程中。
1、公共模块规范 下面是一个简单的步骤指南来创建这样一个公共模块项目。
创建版本控制仓库：使用版本控制工具（如Git）创建一个新的代码仓库，用于管理该公共模块工程的代码。
项目结构：定义好项目的结构，使其易于理解和使用。一个常见的Golang项目结构如下：
my-module/ |- README.md # 项目文档和说明 |- go.</description>
    </item>
    
    <item>
      <title>如何通过 kubernetes ingress 或者 istio ingressgateway 来暴露 TCP 的服务</title>
      <link>https://xcbeyond.cn/blog/cloudnative/exposing-tcp-services/</link>
      <pubDate>Wed, 05 Apr 2023 00:13:10 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/cloudnative/exposing-tcp-services/</guid>
      <description>在 kubernetes 或 istio 应用中，一般都是通过 kubernetes ingress 或者 istio ingressgateway 来暴露 HTTP/HTTPS 的服务。但是在实际应用中，还是有不少应用是TCP长连接的，这个是否也是可以通过 ingress 来暴露呢？</description>
    </item>
    
    <item>
      <title>Kubernetes安装篇（三）：基于kind快速部署本地多套K8S集群</title>
      <link>https://xcbeyond.cn/blog/kubernetes/installation-chapter-part3-deploy-cluster-environment-based-on-kind/</link>
      <pubDate>Sat, 01 Apr 2023 22:49:19 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/kubernetes/installation-chapter-part3-deploy-cluster-environment-based-on-kind/</guid>
      <description>涉足于 Kubernetes 之初时，必然少不了环境的搭建，你是否因为集群搭建步骤繁琐、个人电脑配置不高、运行集群多个节点有些力不从心。
VMware Fusion 12.0 发布，将 Kind 带入了我们的视野，这是 Google 官方的一个工具，是在单机运行 Kubernetes 群集的最佳方案。笔者在个人电脑上运行 Kind，并基于 Kind 搭建了多套 Kubernetes 集群环境，通过集群切换可以完成不同场景的测试，基本满足所有需求。</description>
    </item>
    
    <item>
      <title>Dockerfile 的最佳实践 ｜ Dockerfile 你写的都对么？</title>
      <link>https://xcbeyond.cn/blog/containers/dockerfile-best-practices/</link>
      <pubDate>Sat, 14 May 2022 21:40:14 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/containers/dockerfile-best-practices/</guid>
      <description>随着应用的容器化、上云后，将伴随着 Docker 镜像的构建，构建 Docker 镜像成为了最基本的一步，其中 Dockerfile 便是用来构建镜像的一种文本文件，镜像的优劣全靠 Dockerfile 编写的是否合理、合规。本文将讲述编写 Dockerfile 的一些最佳实践和技巧，让我们的镜像更小、更优。</description>
    </item>
    
    <item>
      <title>谈阿里云云效 DevOps | DevOps 不再只是 Jenkins</title>
      <link>https://xcbeyond.cn/blog/others/devops-is-no-longer-just-jenkins/</link>
      <pubDate>Sat, 26 Mar 2022 21:06:50 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/others/devops-is-no-longer-just-jenkins/</guid>
      <description>提及 DevOps 这个词，大家都一定不会陌生。近些年一直被大家所追捧、讨论，频频出现在各大技术社区、产品实践之中，可谓备受瞩目。
那么，DevOps 是什么呢？
有人说它是 Jenkins 的最佳实践，是一种工具，也有人说它是一种思想，更有人说它是一种方法论。
今天，我们不具体谈论 DevOps 是什么？能干啥？相信大家对它都是有着自己的认知、理解，以及在各自领域中的最佳实践。今天，我们结合阿里云云效，站在云原生时代，一起解读不一样、一站式的 DevOps 平台，让我们彻底认清 DevOps 覆盖的范畴，如何高效打造全新的研发新模式，助力企业加速。</description>
    </item>
    
    <item>
      <title>构建多架构镜像的最佳实践</title>
      <link>https://xcbeyond.cn/blog/containers/build-multi-platform-images-best-practices/</link>
      <pubDate>Sat, 22 Jan 2022 09:56:55 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/containers/build-multi-platform-images-best-practices/</guid>
      <description>在云时代，容器化已经成为一种事实，把软件产品打包、构建成 Docker 镜像是最基本、最关键的一步。在信创的大背景下，云环境中会存在 x86、arm 等不同的架构，所以在构建镜像时需要构建出多种架构的镜像，以适配不同架构的服务器。
在拉取 Docker 镜像时，会根据当前环境的架构自动拉取对应架构的镜像，如：在 x86 环境下拉取的镜像为 x86 架构的镜像，在 arm 环境下拉取的镜像为 arm 架构的镜像。（前提是，该镜像是多架构的镜像）</description>
    </item>
    
    <item>
      <title>盘点 2021 ｜ 云原生拥抱之路</title>
      <link>https://xcbeyond.cn/blog/cloudnative/cloudnative-embrace-road/</link>
      <pubDate>Fri, 31 Dec 2021 21:18:56 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/cloudnative/cloudnative-embrace-road/</guid>
      <description>2021 即将结束，又到了一年一度的盘点时刻，今年该说点啥？
回顾这一年，还是从盘点技术说起，聊一聊我的云原生拥抱之路，在云原生之路上我都从哪些方面入手，学到了什么。
1、背景 之前一直专注于微服务体系架构的研发工作，以 Java 语言作为我的第一程序语言，并伴随了我很多年。随着 2020 年 8 月份工作的变动，全身投入到新架构体系产品的技术预研及研发中，从此开启了我的云原生之路。</description>
    </item>
    
    <item>
      <title>利用 Github Pages 和 Hugo 快速搭建免费的个人网站</title>
      <link>https://xcbeyond.cn/blog/program-life/use-github-pages-and-hugo-to-quickly-build-a-free-personal-website/</link>
      <pubDate>Sat, 25 Dec 2021 22:24:57 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/program-life/use-github-pages-and-hugo-to-quickly-build-a-free-personal-website/</guid>
      <description>你有个人网站吗？
在自媒体时代，人人都在不断向互联网等不同媒介输出内容，如：博客、微博以及抖音等，并在特定领域，依靠于广大社交媒体/平台，如：CSDN、掘金、知乎、InfoQ 等等，发表着自己的心得、学习经历、日常生活等。随着内容的不断输出，总有一些时候，你会想寻找一块“互联网自留地”，“为所欲为”，或是想要进行一些完整而非碎片化的记录，或者想要避免无穷无尽的内容审查，又或者你只是不喜欢社交平台那杂乱的界面和不必要的互动，此时拥有一个个人网站总是一个更好的选择。
提起个人网站，你或许心中一震，钱呢？服务器呢
今天我就和大家分享一种不花钱、不要独立服务器，也能搞起个人网站的方法。
1、需求分析 个人网站，主要是用来记录属于个人的东西，将内容以最直接方式呈现给大家，其中文字、图片占比最多，基本不存在其它用户的注册场景。
对于个人网站，大家主要有以下方面的思考：
  网站系统：自己从头写？搞个开源的自己改？花钱买吗？</description>
    </item>
    
    <item>
      <title>全方位解读服务网格（Service Mesh）的背景和概念</title>
      <link>https://xcbeyond.cn/blog/servicemesh/what-is-servie-mesh/</link>
      <pubDate>Sat, 11 Sep 2021 21:34:31 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/servicemesh/what-is-servie-mesh/</guid>
      <description>一直以来“微服务”都是一个热门的词汇，在各种技术文章、大会上，关于微服务的讨论和主题都很多。对于基于 Dubbo、SpringCloud 技术体系的微服务架构，已经相当成熟并被大家所知晓，但伴随着互联网场景的复杂度提升、业务快速变更以及快速响应，如何快速、稳定、高效的应对变幻莫测的业务市场需求，这类技术体系（如：Spring Cloud）的传统微服务架构就变得力不从心，此时微服务架构再次升级，将服务网格作为了新一代微服务架构。
本文将从传统微服务架构出发，为大家阐述新一代微服务架构&amp;ndash;服务网格，它能解决什么问题，为用户带来什么，可作为你对服务网格的认知文章。
1、背景 微服务，也称之为微服务架构，是一种架构风格，相比单体应用，它将应用程序拆分为一组服务，并将这些服务组合起来来完成整个复杂的业务功能。下面这些特征就能高度反映出它的价值所在：
 高度可维护和可测试性 松耦合 独立部署 围绕业务能力进行组织 小团队拥有  简单的回顾完微服务架构的概念，我们一起看看新一代微服务架构是如何诞生的。</description>
    </item>
    
    <item>
      <title>Cobra 快速入门 - 专为命令行程序而生</title>
      <link>https://xcbeyond.cn/blog/golang/cobra-quick-start/</link>
      <pubDate>Sun, 01 Aug 2021 13:58:02 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/golang/cobra-quick-start/</guid>
      <description>最近一直在看 Istio（一个 Service Mesh 框架）相关的东西，当看到其源码时发现了一个新东西 Cobra，一查却发现这是个好东西，用的地方可不少，比如：Docker、Kubernetes 等都有它的身影存在。为了更好的了解这些开源框架（如，Istio、Kubernetes 等），势必需要对 Cobra 做一个详细的了解，后续可能用到它的地方会很多。今天就 Cobra 做一个整体的介绍，让我们对它能有所认识，或许今后你的项目中也会用到它。</description>
    </item>
    
    <item>
      <title>我被InfoQ写作平台签约啦</title>
      <link>https://xcbeyond.cn/blog/program-life/i-have-been-signed-up-by-infoq/</link>
      <pubDate>Fri, 09 Jul 2021 07:03:34 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/program-life/i-have-been-signed-up-by-infoq/</guid>
      <description>是的，你没有看错，我被 InfoQ 写作平台签约啦！
作为喜欢写作、分享技术的我，目前已入驻各大平台（CSND、腾讯云云+社区、InfoQ、掘金、开源中国等），但庆幸的是今天我正式被 InfoQ 写作平台签约了，作为我第一个签约的平台，非常开心。
签约计划 InfoQ 作为“为一线互联网公司核心技术人员提供优质内容。科技圈的观察者，前沿技术的传播者”，它名副其实，其文章的深度、广度更是无可挑剔。在去年 4 月 29 日（2020 年 4 月 29 日）InfoQ 写作平台正式上线啦，幸运的是我也成为了比较早入驻的作者，在这里发布着一些技术文章。一晃一年过去了，在 InfoQ 写作平台一周年来临之际，《InfoQ 写作平台｜百位优质创作者签约计划》启动，我也就抱着试试的心态参与了。</description>
    </item>
    
    <item>
      <title>可视化接口管理平台 YApi，让你轻松搞定 API 的管理问题</title>
      <link>https://xcbeyond.cn/blog/others/visual-interface-management-platform-yapi/</link>
      <pubDate>Wed, 07 Jul 2021 22:54:01 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/others/visual-interface-management-platform-yapi/</guid>
      <description>随着开发的推进，各种各样的文档会接踵而来，比如：需求文档、架构文档、接口文档等等，我们通过 SVN、Git 等可以很方便的管理，面对需求的不断变化，我们需要不断的对各类文档进行维护。但在开发阶段，针对接口文档而言，其具有不确定性、难维护、难测试等特点，接口的管理往往成为了难题。
今天我们带着 API 接口管理的问题，一起来看看一款可视化接口管理平台 YApi，它是如何能够轻松帮助我们搞定 API 的管理问题。
YApi 介绍 YApi 是高效、易用、功能强大的 API 管理平台，旨在为开发、产品、测试人员提供更优雅的接口管理服务。可以帮助开发者轻松创建、发布、维护 API，YApi 还为用户提供了优秀的交互体验，开发人员只需利用平台提供的接口数据写入工具以及简单的点击操作就可以实现接口的管理。</description>
    </item>
    
    <item>
      <title>我与InfoQ写作平台的这些事</title>
      <link>https://xcbeyond.cn/blog/program-life/my-stories-with-the-infoq-writing-platform/</link>
      <pubDate>Sun, 02 May 2021 22:10:09 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/program-life/my-stories-with-the-infoq-writing-platform/</guid>
      <description>大家好，我是 xcbeyond，xcbeyond 就是我，大家也可以叫我“超哥”！
1、相识 早在 2019 年，甚至更早，从“InfoQ”公众号、InfoQ 技术大会开始，让我知道 InfoQ 的存在，作为“为一线互联网公司核心技术人员提供优质内容。科技圈的观察者，前沿技术的传播者”，它名副其实，其文章的深度、广度更合我的胃口。 InfoQ 官网更是卧虎藏龙，无论是对前沿技术的分析，还是对热点领域的深耕，都有着独到的见解，这些创作者大多都是各个领域的专家、标杆，比如：钰湚，他也是我在 InfoQ 平台认识的第一位好友（准确来说应该是“网友”吧），他们身后更有 InfoQ 平台的编辑支持、策划，因此，文章质量可想而知。</description>
    </item>
    
    <item>
      <title>构建基于Spring Cloud向Service Mesh框架迁移的解决方案及思路</title>
      <link>https://xcbeyond.cn/blog/servicemesh/migration-from-springcloud-to-servicemesh/</link>
      <pubDate>Fri, 09 Apr 2021 14:50:21 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/servicemesh/migration-from-springcloud-to-servicemesh/</guid>
      <description>作为新一代微服务架构体系，Service Mesh 技术有效地解决了 Spring Cloud 微服务架构和服务治理过程中的痛点问题，一经推出便引起了很大的反响。近一年来，伴随着云原生的热火朝天，Service Mesh 被推向了巅峰，从陌生走向大家的视界，甚至一些初创企业都想从中获得第一桶金。对于初创企业或全新产品，选择 Service Mesh 变得相对轻松很多，毕竟不存在迁移的问题。但对于大部分企业或成熟的产品体系，这样大的架构转型就变得很难以实施，需要多加权衡利弊，面对 Service Mesh 带来的好处，不得不迫使向它靠拢。</description>
    </item>
    
    <item>
      <title>2.1 Go语言从入门到精通：Go语言基础语法</title>
      <link>https://xcbeyond.cn/blog/go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/2.1-go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9Ago%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Sun, 28 Mar 2021 19:29:31 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/2.1-go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9Ago%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</guid>
      <description>与其他编程语言一样，Go 语言项目（大程序）都是从基本组件和基本语法编写而成。上一章节我们已经了解了 Go 语言的样子，本章节我们将学习 Go 语言的基础语法，也将是接下来所有 Go 程序中不可或缺的部分。
1、命名规则 Go 中类型、变量、常量、语句标签、包和函数的命名都遵循一个简单的规则：命名的开头是一个字母或下划线而不能是数字，后面可以跟任意数量的字符、数字和下划线，并区分大小写。 如 xcbeyond 和 xcBeyond 是不同的标识符。</description>
    </item>
    
    <item>
      <title>1.4 Go语言从入门到精通：Go代理goproxy，让你轻松下载依赖包</title>
      <link>https://xcbeyond.cn/blog/go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/1.4-go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9Ago%E4%BB%A3%E7%90%86goproxy%E8%AE%A9%E4%BD%A0%E8%BD%BB%E6%9D%BE%E4%B8%8B%E8%BD%BD%E4%BE%9D%E8%B5%96%E5%8C%85/</link>
      <pubDate>Wed, 24 Mar 2021 23:02:16 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/1.4-go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9Ago%E4%BB%A3%E7%90%86goproxy%E8%AE%A9%E4%BD%A0%E8%BD%BB%E6%9D%BE%E4%B8%8B%E8%BD%BD%E4%BE%9D%E8%B5%96%E5%8C%85/</guid>
      <description>在逐步编写 Go 程序时，会涉及使用到第三方提供的 Go 依赖包，如：github.com/spf13/cobra，在国内使用 go get 命令安装时经常会出现 timeout 等问题，实在让人头疼。大家都知道，在国内网络环境下，想要解决这种问题，只有掌握科学上网才能彻底解决。但是科学上网却是需要花费额外成本的，那该怎么办呢？</description>
    </item>
    
    <item>
      <title>1.3 Go语言从入门到精通：编写第一个Go程序</title>
      <link>https://xcbeyond.cn/blog/go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/1.3-go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E7%BC%96%E5%86%99%E7%AC%AC%E4%B8%80%E4%B8%AAgo%E7%A8%8B%E5%BA%8F/</link>
      <pubDate>Thu, 25 Feb 2021 22:25:17 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/1.3-go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E7%BC%96%E5%86%99%E7%AC%AC%E4%B8%80%E4%B8%AAgo%E7%A8%8B%E5%BA%8F/</guid>
      <description>在开始 Go 语言的基本语法、函数和高级特性等之前，让我们先编写第一个 Go 程序 &amp;quot;Hello World！&amp;quot;开始，来了解 Go 语言最简单程序的结构吧，看看 Go 程序应该包括哪些部分，每部分都位于什么位置，Go 语言究竟是如何执行的。</description>
    </item>
    
    <item>
      <title>1.2 Go语言从入门到精通：开发环境搭建</title>
      <link>https://xcbeyond.cn/blog/go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/1.2-go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Sun, 21 Feb 2021 20:21:06 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/1.2-go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>上一篇对 Go 语言进行了介绍，不知道你有没有想继续学下去的冲动呢?
在软件领域，当你学习一门新语言、新技术时，一般先从安装环境开始，实实在在的安装完，使用它，逐步深入了解。本文将从 Go 语言环境安装开始，带你一起开启 Go 语言的开发之路，其中包括环境安装、IDE使用等内容。
1、Go语言环境安装 1.1 开发包获取 Go 语言支持以下系统：</description>
    </item>
    
    <item>
      <title>1.1 Go语言从入门到精通：Go语言介绍</title>
      <link>https://xcbeyond.cn/blog/go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/1.1-go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9Ago%E8%AF%AD%E8%A8%80%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sun, 21 Feb 2021 15:03:15 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/1.1-go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9Ago%E8%AF%AD%E8%A8%80%E4%BB%8B%E7%BB%8D/</guid>
      <description>1、Go 介绍  Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.</description>
    </item>
    
    <item>
      <title>解读云原生技术</title>
      <link>https://xcbeyond.cn/blog/cloudnative/%E8%A7%A3%E8%AF%BB%E4%BA%91%E5%8E%9F%E7%94%9F%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Sun, 21 Feb 2021 14:33:54 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/cloudnative/%E8%A7%A3%E8%AF%BB%E4%BA%91%E5%8E%9F%E7%94%9F%E6%8A%80%E6%9C%AF/</guid>
      <description>云原生的技术体系看似纷乱繁杂，但在不同视角都体现着“牵一发而动全身”的主线。从时间线来看，容器技术的发展催生了云原生思潮，在底层解决了资源供给问题，随后开源的 Kubernetes 成为容器编排的标准规范，当基于 Kubernetes 可扩展能力的开放应用平台逐渐丰富，使其成为了云原生生态最重要的基石。随后 Service Mesh、Serverless 技术的核心思想更偏重在业务侧实现价值——将更多的能力下沉到基础设施，为应用的轻量化、上云提供可能。
从技术需求的角度来看，微服务架构是解决单体复杂度问题的首选方式，却带来整个系统的整体复杂度大幅增加，容器技术和 Kubernetes 分别解决了微服务架构下大量应用的部署、以及容器的管理和调度问题，同时，Kubernetes 也为 Service Mesh 提供了更好的底层支撑，也带来了底层基础设施的 Serverless 云原生化和中间件能力的进一步下沉。</description>
    </item>
    
    <item>
      <title>我们设计的是微服务还是小单体呢？</title>
      <link>https://xcbeyond.cn/blog/microservice/%E6%88%91%E4%BB%AC%E8%AE%BE%E8%AE%A1%E7%9A%84%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%BF%98%E6%98%AF%E5%B0%8F%E5%8D%95%E4%BD%93%E5%91%A2/</link>
      <pubDate>Fri, 15 Jan 2021 10:02:25 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/microservice/%E6%88%91%E4%BB%AC%E8%AE%BE%E8%AE%A1%E7%9A%84%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%BF%98%E6%98%AF%E5%B0%8F%E5%8D%95%E4%BD%93%E5%91%A2/</guid>
      <description>在微服务设计和实践中，可能很多人会一致认为：“将单体应用拆分成多少个微服务，是微服务的设计重点。”
很多人把大量的精力花费在如何拆分微服务上，并把微服务设计好坏全部归因于微服务拆分的好坏。
可事实真是这样吗？其实并非如此！
Martin Fowler在提出微服务时，提到过微服务的一个重要特征：演进式架构。
演进式架构以支持增量、非破坏的变更作为第一原则，同时支持在应用程序结构层面的多维度变化。
那如何判断微服务设计是否合理呢？
其实很简单，你只需看它是否满足这样的情形：**随着业务的发展或需求变更，在领域模型和微服务不断被重新拆分，或者组合成新的微服务过程中，不会大幅度增加软件开发或维护的成本，并且这个架构演进的过程是非常轻松和简单的。**这才是微服务设计的重点，更是微服务设计时最应该关系的问题。
在微服务设计时，很多团队在将集中式单体应用拆分微服务时，单纯按照业务功能将原来的单体应用，从一个部署包拆分成多个所谓的“微服务”部署包。这些“微服务”内的代码却仍然采用传统三层架构的设计模式，即这些代码依旧高度耦合，逻辑边界不清晰，我们暂且称它为“小单体微服务”。
 三层架构：表现层、业务层、数据访问层。</description>
    </item>
    
    <item>
      <title>0 Go语言从入门到精通：开篇介绍，Go语言我来啦</title>
      <link>https://xcbeyond.cn/blog/go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/0-go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E5%BC%80%E7%AF%87%E4%BB%8B%E7%BB%8Dgo%E8%AF%AD%E8%A8%80%E6%88%91%E6%9D%A5%E5%95%A6/</link>
      <pubDate>Thu, 14 Jan 2021 21:30:24 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A/0-go%E8%AF%AD%E8%A8%80%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A%E5%BC%80%E7%AF%87%E4%BB%8B%E7%BB%8Dgo%E8%AF%AD%E8%A8%80%E6%88%91%E6%9D%A5%E5%95%A6/</guid>
      <description>“Go will be the server language of the future.” — Tobias Lütke, Shopify</description>
    </item>
    
    <item>
      <title>中台到底是什么？</title>
      <link>https://xcbeyond.cn/blog/architecture/%E4%B8%AD%E5%8F%B0%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88/</link>
      <pubDate>Mon, 11 Jan 2021 09:25:43 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/architecture/%E4%B8%AD%E5%8F%B0%E5%88%B0%E5%BA%95%E6%98%AF%E4%BB%80%E4%B9%88/</guid>
      <description>到处都在喊中台，到处都是中台，中台这个词在好多地方已经被滥用了。
在有些人眼里：中台就是技术平台，像微服务开发框架、Devops 平台、PaaS 平台，容器云之类的，人们都叫它“技术中台”。
在有些人眼里：中台就是微服务业务平台，像最常见的什么用户中心，订单中心，各种微服务集散地，人们都叫它“业务中台”。
在有些人眼里：中台应该是组织的事情，类似于企业内部资源调度中心和内部创新孵化组织，人们都叫它“组织中台”。
中台，从字面意思上理解，是位于前台和后台之间。
那么，中台到底是什么呢？
谈到中台，首先会想到阿里巴巴，今天就从阿里中台开始，一起认识下中台到底是什么？到底如何发展而来的呢？
阿里中台的发展历程 阿里巴巴在 2003 年时成立了淘宝事业部，2008 年时成立了天猫事业部（其中一部分人来自淘宝事业部），没过多久，天猫与淘宝并驾齐驱，此时淘宝的技术团队同时支持着淘宝和天猫的业务，淘宝优先满足自己的业务，使得天猫的业务团队怨声载道，严重影响了天猫的业务发展。。</description>
    </item>
    
    <item>
      <title>Kubernetes安装篇（二）：基于Kubeadm方式的集群部署</title>
      <link>https://xcbeyond.cn/blog/kubernetes/installation-chapter-part2-deploy-cluster-environment-based-on-kubeadm/</link>
      <pubDate>Sun, 15 Nov 2020 20:51:34 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/kubernetes/installation-chapter-part2-deploy-cluster-environment-based-on-kubeadm/</guid>
      <description>上一篇文章《Kubernetes安装篇（上）：基于Minikube方式部署本地环境》介绍了基于本地环境下的 Kubernetes 安装，目的在于搭建本地开发环境。但在实际生产环境中，Kubernetes 环境就比这复杂的多，起码也是集群起步，因此，本文将从生产环境出发，为你带来基于生产环境下的 Kubernetes 集群部署，让你真正懂得该如何部署真正的 Kubernetes 集群环境。
1、环境准备 采用 VMware 虚拟机安装 Kubernetes 集群，准备环境情况如下：</description>
    </item>
    
    <item>
      <title>Kubernetes安装篇（一）：基于Minikube方式部署本地环境</title>
      <link>https://xcbeyond.cn/blog/kubernetes/installation-chapter-part1-deploy-local-environment-based-on-minikube/</link>
      <pubDate>Sat, 07 Nov 2020 20:23:01 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/kubernetes/installation-chapter-part1-deploy-local-environment-based-on-minikube/</guid>
      <description>一切先从安装开始！
学习一门新的技术，一般先从安装开始，实实在在的安装完，使用它，逐步深入了解。
为了方便大家开发、学习和体验 Kubernetes，Kubernetes 社区提供了可以在本地部署的 minikube，通过 minikube 方式可以在本地运行 Kubernetes。
（Kubernetes 的部署方式还有很多，本文是基于本地开发环境的部署方式，学习它足够了。想要部署一套符合生产环境的集群不是一件容易的事，随后其他篇章将会涉及。）</description>
    </item>
    
    <item>
      <title>Kubernetes概念篇：基本概念和术语</title>
      <link>https://xcbeyond.cn/blog/kubernetes/concept-chapter-kubernetes-baisc-concept/</link>
      <pubDate>Mon, 26 Oct 2020 23:28:43 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/kubernetes/concept-chapter-kubernetes-baisc-concept/</guid>
      <description>在开始使用之前，应当先了解一下关于Kubernetes的相关概念术语，对后续的学习、使用将有很大的帮助。（Kubernetes的概念比较多，建议加强理解，并清楚各种所处位置及关联！）
Kubernetes中的大部分概念，如：Node、Pod、Replication Controller、Service等都可以看作是一种资源对象，几乎所有资源对象都可以通过Kubernetes提供的kubectl工具（或者API接口）执行增、删、改、查等操作并将其保存在etcd中持久化存储。
从这个角度来看，Kubernetes其实是一个高度自动化的资源控制系统，它通过跟踪对比etcd库里保存的“资源期望状态”与当前环境中的“实际资源状态”的差异来实现自动控制和自动纠错的高级功能。
本文将介绍Kubernetes中重要的资源对象，即：Kubernetes的基本概念和术语。
1、Master Master是指Kubernetes集群中的控制节点（Master Node），在每个Kubernetes集群里都需要有一个Master来负责整个集群的管理和控制，基本所有的控制命令都发给它，它负责具体的执行过程，后续执行的所有命令基本都是在Master上运行。
Master提供集群的独特视角，并且拥有一系列组件，比如Kubernetes API Server。API Server提供可以用来和集群交互的REST端点。可以通过命令行或图形化界面来维护pod、副本和服务。</description>
    </item>
    
    <item>
      <title>Kubernetes介绍篇：是什么？为什么要用？</title>
      <link>https://xcbeyond.cn/blog/kubernetes/introduction-chapter-what-is-kubernetes/</link>
      <pubDate>Mon, 26 Oct 2020 10:18:25 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/kubernetes/introduction-chapter-what-is-kubernetes/</guid>
      <description>是时候该学习Kubernetes了，不然都不敢说自己了解容器、了解Docker。
 1、Kubernetes的前世 Kubernetes，它是一个全新的基于容器技术的分布式架构方案，近些年在容器领域使用非常广泛，作为容器化部署实施的典型方案。
看似很新（相对于刚出现时来说），但它却是谷歌十几年以来大规模应用容器技术的经验积累和升华的重要成果。确切地说，Kubernetes是谷歌严格保密十几年的秘密武器——Borg的一个开源版本。Borg是谷歌的一个久负盛名的内部使用的大规模集群管理系统，它基于容器技术，目的是实现资源管理的自动化，以及跨过个数据中心资源利用率的最大化。十几年以来，谷歌一直通过Borg系统管理者数据庞大的应用程序集群，由于谷歌员工都签署了保密协议，即使离职也不能泄露Borg的内部设计，所以外界一直无法了解关于它的更多信息。直到2015年4月，传闻许久的Borg论文发布，伴随着Kubernetes的高调宣传被谷歌首次公开，大家才得以了解它的更多内幕。正式由于站在Borg这个前辈的肩膀上，汲取了Borg过去十年间的经验与教训，所以Kubernetes一经开源就一鸣惊人，并迅速称霸容器领域。
Borg就是一个喷气式飞机的驾驶系统，非常的专业和高大上，他适用于谷歌这样的大公司，它有几百万的机器。Kubernetes是一个它的简化版，它是一辆设计优良的轿车，它适合中小型公司，更方便的用它来调度自己的集群。
2、Kubernetes是什么？ Kubernetes是用于自动部署，扩展和管理容器化应用程序的开源系统，它将组成应用程序的容器组合成逻辑单元，以便于管理和服务发现。Kubernetes源自谷歌15年生产环境的运维经验，同时凝聚了社区的最佳创意和实践。
Kubernetes，构建在Docker技术之上，为跨主机的容器化应用提供资源调度、服务发现、高可用管理和弹性伸缩等一整套功能，它提供了完善的管理工具，涵盖开发、部署测试、运维监控等各个环节。它的目标不仅仅是一个编排系统，更是提供一个规范，可以让你来描述集群的架构，定义服务的最终状态，Kubernetes可以帮你将系统自动达到和维持在这个状态。</description>
    </item>
    
    <item>
      <title>MySQL性能优化(七)：MySQL执行计划，真的很重要，来一起学习吧</title>
      <link>https://xcbeyond.cn/blog/mysql-performance-optimization/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B8%83mysql%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92%E7%9C%9F%E7%9A%84%E5%BE%88%E9%87%8D%E8%A6%81%E6%9D%A5%E4%B8%80%E8%B5%B7%E5%AD%A6%E4%B9%A0%E5%90%A7/</link>
      <pubDate>Sun, 10 May 2020 21:06:18 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/mysql-performance-optimization/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B8%83mysql%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92%E7%9C%9F%E7%9A%84%E5%BE%88%E9%87%8D%E8%A6%81%E6%9D%A5%E4%B8%80%E8%B5%B7%E5%AD%A6%E4%B9%A0%E5%90%A7/</guid>
      <description>一条 SQL 被一个懵懂的少年，一阵蹂躏，扔向了 MySQL 服务器的尽头，少年苦苦等待，却迟迟等不来那满载而归的硕果。于是少年气愤，费尽苦心想从度娘那边寻求帮助，面对执行计划 EXPLAIN，却等来的是无尽的折磨与抓狂。
通过 explain 命令，根据执行计划找到存在性能问题的 SQL 语句，以帮助我们优化 SQL 提供方向和依据。</description>
    </item>
    
    <item>
      <title>MySQL性能优化(六)：常见优化SQL的技巧</title>
      <link>https://xcbeyond.cn/blog/mysql-performance-optimization/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%85%AD%E5%B8%B8%E8%A7%81%E4%BC%98%E5%8C%96sql%E7%9A%84%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sun, 19 Apr 2020 20:28:09 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/mysql-performance-optimization/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%85%AD%E5%B8%B8%E8%A7%81%E4%BC%98%E5%8C%96sql%E7%9A%84%E6%8A%80%E5%B7%A7/</guid>
      <description>在面对不够优化、或者性能极差的 SQL 语句时，我们通常的想法是将重构这个 SQL 语句，让其查询的结果集和原来保持一样，并且希望 SQL 性能得以提升。而在重构 SQL 时，一般都有一定方法技巧可供参考，本文将介绍如何通过这些技巧方法来重构 SQL。</description>
    </item>
    
    <item>
      <title>MySQL性能优化(五)：为什么查询速度这么慢</title>
      <link>https://xcbeyond.cn/blog/mysql-performance-optimization/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%BA%94%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9F%A5%E8%AF%A2%E9%80%9F%E5%BA%A6%E8%BF%99%E4%B9%88%E6%85%A2/</link>
      <pubDate>Tue, 07 Apr 2020 20:35:56 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/mysql-performance-optimization/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%BA%94%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9F%A5%E8%AF%A2%E9%80%9F%E5%BA%A6%E8%BF%99%E4%B9%88%E6%85%A2/</guid>
      <description>前面章节我们介绍了如何选择优化的数据类型、如何高效的使用索引，这些对于高性能的 MySQL 来说是必不可少的。但这些还完全不够，还需要合理的设计查询。如果查询写的很糟糕，即使表结构再合理、索引再合适，也是无法实现高性能的。
谈到 MySQL 性能优化，查询优化作为优化的源头，它也是最能体现一个系统是否更快。本章以及接下来的几章将会着重讲解关于查询性能优化的内容，从中会介绍一些查询优化的技巧，帮助大家更深刻地理解 MySQL 如何真正地执行查询、究竟慢在哪里、如何让其快起来，并明白高效和低效的原因何在，这样更有助于你更好的来优化查询 SQL 语句。</description>
    </item>
    
    <item>
      <title>MySQL性能优化(四)：如何高效正确的使用索引</title>
      <link>https://xcbeyond.cn/blog/mysql-performance-optimization/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%9B%9B%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E7%9A%84%E4%BD%BF%E7%94%A8%E7%B4%A2%E5%BC%95/</link>
      <pubDate>Sun, 29 Mar 2020 01:20:08 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/mysql-performance-optimization/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E5%9B%9B%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E7%9A%84%E4%BD%BF%E7%94%A8%E7%B4%A2%E5%BC%95/</guid>
      <description>正确地创建和使用索引是实现高性能查询的基础。前面文章 MySQL性能优化(三)：深入理解索引的这点事 已经介绍了各种类型的索引及其特点，而在实际使用索引中，如何真正有效地发挥索引的价值，还需要进一步持续不断地学习、磨练。接下来本篇文章将分享如何高效、正确的使用索引。
实践是检验真理的唯一途径，本篇只是站在索引使用的全局来定位的，你只需要通读全篇并结合具体的例子，或回忆以往使用过的地方，对整体有个全面认识，并理解索引是如何工作的，就可以了。在后续使用索引，或者优化索引时，可以从这些方面出发，进一步来加深对索引正确高效的使用。
一、索引失效 索引失效，是一个老生常谈的话题了。只要提到数据库优化、使用索引，都能一口气说出一大堆索引失效的场景，什么不能用、什么不该用这类的话，在此，我就不再一一罗列啰嗦了。
索引失效，是指表中有字段创建了索引，由于 sql 语句书写不当导致索引失效的情况。
在 sql 语句中，将索引列作为表达式的一部分、参与函数/数学等运算，将会导致索引失效。</description>
    </item>
    
    <item>
      <title>MySQL性能优化(三)：深入理解索引的这点事</title>
      <link>https://xcbeyond.cn/blog/mysql-performance-optimization/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B8%89%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E7%B4%A2%E5%BC%95%E7%9A%84%E8%BF%99%E7%82%B9%E4%BA%8B/</link>
      <pubDate>Sat, 14 Mar 2020 17:18:43 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/mysql-performance-optimization/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B8%89%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E7%B4%A2%E5%BC%95%E7%9A%84%E8%BF%99%E7%82%B9%E4%BA%8B/</guid>
      <description>索引，对于良好的数据库性能非常关键。只要提及到数据库性能优化，都会首先想到“索引”，看看表中是否添加索引。尤其是当表中的数据量越来越大时，索引对性能的影响尤为突出。在数据量较小且负载较低时，没有索引或者不恰当索引对性能的影响可能还不明显，但当数据量逐渐增大时，性能则会急剧下降。
不过，索引却经常被忽略，有时候甚至被误解、误用，在实际使用中经常会遇到糟糕索引而导致的性能问题。本文就索引的概念、类型、优点等方面聊聊，一起深入理解索引的这点事，更有助于你清楚的理解索引，能够正确的使用它，便于利用它来进行数据库的优化。
一、什么是索引 索引(Index)，是帮助MySQL高效获取数据的数据结构，是存储引擎用于快速找到记录的一种数据结构。
要理解 MySQL 中索引是如何工作的，最简单的例子就是去看看一本书的目录“索引”部分。如果想在一本书中找到某个章节，一般我们会先看书的目录“索引”，就会立即找到对应的页码。
在 MySQL 中，存储引擎也是用类似的方法使用索引，首先在索引中找到对应的值，然后根据匹配的索引记录找到对应的数据行。</description>
    </item>
    
    <item>
      <title>MySQL性能优化(二)：选择优化的数据类型</title>
      <link>https://xcbeyond.cn/blog/mysql-performance-optimization/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%BA%8C%E9%80%89%E6%8B%A9%E4%BC%98%E5%8C%96%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Sat, 07 Mar 2020 21:22:09 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/mysql-performance-optimization/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%BA%8C%E9%80%89%E6%8B%A9%E4%BC%98%E5%8C%96%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>良好的设计是高性能的基石，应该根据系统的实际业务需求、使用场景进行设计、优化、再调整，在这其中往往需要权衡各种因素，例如，数据库表究竟如何划分、字段如何选择合适的数据类型等等问题。
MySQL 支持的数据类型非常之多，对于选择恐惧症的小伙伴而言，苦不可言。大部分人在创建数据库表时，基本一股脑的使用 INT、VARCHAR 这两种类型最多，至于长度，则会选择足够大即可，避免日后不够用咋办。只顾当时一时爽，之后坑谁谁难受。
如果你是一个追求极致、高效的开发者，对于上面的情况肯定是不愿让其发生的。在众多的数据类型面前，如何选择正确的数据类型，对于高性能是至关重要的。本文将介绍如何选择优化的数据类型，来提高 MySQL 的性能，将会选取最为常用的类型进行说明，便于在实际开发中创建表、优化表字段类型时提供帮助。
一、选择原则 不管存储哪种类型的数据，下面几个简单的原则将有助于你做出更好的选择。</description>
    </item>
    
    <item>
      <title>MySQL性能优化(一)：MySQL架构与核心问题</title>
      <link>https://xcbeyond.cn/blog/mysql-performance-optimization/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B8%80mysql%E6%9E%B6%E6%9E%84%E4%B8%8E%E6%A0%B8%E5%BF%83%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sun, 01 Mar 2020 15:13:13 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/mysql-performance-optimization/mysql%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B8%80mysql%E6%9E%B6%E6%9E%84%E4%B8%8E%E6%A0%B8%E5%BF%83%E9%97%AE%E9%A2%98/</guid>
      <description>一、前言 作为程序员的你，数据库作为一门必修课，而 MySQL 数据库毫无疑问已经是最常用的数据库了。系统的稳定、高效、高并发等指标，很大程度上取决于数据库性能是否够优，可见性能优化的重要性，这也就不难理解各位在任何一场面试中都会被问及到数据库调优相关的问题。
因此，这就是我为何考虑写该系列文章的主要原因，希望该系列文章(MySQL性能优化)能够给你带来收获，让你更系统、更全面的掌握 MySQL 性能优化的技能、技巧。该系列文章将会持续分享、更新，如果觉得现在或者将来可能对你有用，不妨持续关注、收藏。
在 MySQL 性能优化之前，你有必要重新再认识下 MySQL，便于后续更容易理解 MySQL 性能优化中涉及到的知识点。本文将从 MySQL 架构、核心问题来针对性展开讨论，这也将是 MySQL性能优化 系列文章的开篇之作。</description>
    </item>
    
    <item>
      <title>文档写作利器：Markdown</title>
      <link>https://xcbeyond.cn/blog/others/markdown-usage/</link>
      <pubDate>Wed, 12 Feb 2020 22:32:25 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/others/markdown-usage/</guid>
      <description>一、前言 无论你是软件开发者，还是互联网写作者，为了使自己写的文档或作品更好的流通，便于在不同场合、不同环境、不同人群的查看，亟需寻求一种通用、便于扭转、留存的文档格式。
在这之前、现在或者今后，你可能会存在以下这些困扰：
 作为软件开发者、架构师，写的设计文档到底应该以什么样的格式来保存呢？是word、txt、pdf，还是html呢？这些文档格式，在不同情况下，可能都会存在。有时为了便于评审、修改，会采用word格式；有时为了防止文档篡改，会采用pdf格式；有时为了便于网页浏览(如：GitLib)，会采用html格式。难道要针对不同格式进行不同的编写吗？ 作为互联网写作者，写的文章希望能够在不同的平台能够发表，分享给更多的人。而在不同互联网平台，如：微信公众号、CSND、知乎、有道云笔记等，文章的排版会花费你大量的时间，不同平台排版上也会存在一些差异性，甚至让你抓狂。难道不同平台要进行不同排版的调整吗？  办法总比困难多! 上述的这些困扰，Markdown就能很好的解决，接下来我们一起来了解下它吧。
二、Markdown是什么 Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</description>
    </item>
    
    <item>
      <title>微服务架构下各类项目的顺势崛起</title>
      <link>https://xcbeyond.cn/blog/microservice/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%8B%E5%90%84%E7%B1%BB%E9%A1%B9%E7%9B%AE%E7%9A%84%E9%A1%BA%E5%8A%BF%E5%B4%9B%E8%B5%B7/</link>
      <pubDate>Sat, 27 Jul 2019 23:51:20 +0800</pubDate>
      
      <guid>https://xcbeyond.cn/blog/microservice/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%8B%E5%90%84%E7%B1%BB%E9%A1%B9%E7%9B%AE%E7%9A%84%E9%A1%BA%E5%8A%BF%E5%B4%9B%E8%B5%B7/</guid>
      <description>一、前言  作者接触微服务也好久时间了，从零开始构建公司产品的微服务化，目前逐步成型稳定。计划在接下来的时间里，把微服务架构下项目的实践，分门别类的总结汇总，围绕“微服务架构下的核心话题”，与大家分享，希望能够给大家在微服务中带来帮助，助力你更好的了解它，避免走不必要的弯路。
 在接触任何一个新鲜事物初期时，你一定有必要了解它，知道它能给你带来什么、有哪些优势、哪些弊端，最终要搞明白它是否合适你，再决定是否使用它。技术更是如此，这也就是常常所说的技术选型、架构选型，更是作为一个架构师必须衡量考虑的。在当前技术不断革新的趋势下，每天可能都有新的概念、新的体系、新的技术(框架)出现，微服务的出现，纷纷被众多技术人、公司所追捧，仿佛给传统项目的重构、新项目的研发带来了便捷、萌发了希望，但大家都真的了解它么？
在微服务架构下，各类项目也顺势崛起，作为技术人，貌似不会微服务，都有些不好意思。(调侃一下而已)
就以下两个方面，带你更好的了解微服务架构体系，明白为什么在微服务架构下各类项目的顺势崛起。
 什么是微服务 为什么要使用微服务  二、什么是微服务 微服务的概念，最早由 Martin Fowler 与 James Lewis 于 2014 年共同提出，在近几年才走入大家的视线，引起关注。首先，我们看一下 Martin Fowlern 在《Microservices》一文是如：</description>
    </item>
    
    <item>
      <title>Algorithm</title>
      <link>https://xcbeyond.cn/course/course-5/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/course/course-5/</guid>
      <description>About Course Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Artificial Intelligence</title>
      <link>https://xcbeyond.cn/course/course-3/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/course/course-3/</guid>
      <description>About Course Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Geography</title>
      <link>https://xcbeyond.cn/research/research-1/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/research/research-1/</guid>
      <description>About Research Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Geography</title>
      <link>https://xcbeyond.cn/research/research-2/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/research/research-2/</guid>
      <description>About Research Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Geography</title>
      <link>https://xcbeyond.cn/research/research-3/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/research/research-3/</guid>
      <description>About Research Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Geography</title>
      <link>https://xcbeyond.cn/research/research-4/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/research/research-4/</guid>
      <description>About Research Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Geography</title>
      <link>https://xcbeyond.cn/research/research-5/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/research/research-5/</guid>
      <description>About Research Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Geography</title>
      <link>https://xcbeyond.cn/research/research-6/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/research/research-6/</guid>
      <description>About Research Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>JavaScript</title>
      <link>https://xcbeyond.cn/course/course-4/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/course/course-4/</guid>
      <description>About Course Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Mathematics</title>
      <link>https://xcbeyond.cn/course/course-2/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/course/course-2/</guid>
      <description>About Course Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Photography</title>
      <link>https://xcbeyond.cn/course/course-1/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/course/course-1/</guid>
      <description>About Course Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Teaching Materials and Testing Methods</title>
      <link>https://xcbeyond.cn/notice/notice-1/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/notice/notice-1/</guid>
      <description>About Notice Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Teaching Materials and Testing Methods</title>
      <link>https://xcbeyond.cn/notice/notice-2/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/notice/notice-2/</guid>
      <description>About Notice Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Teaching Materials and Testing Methods</title>
      <link>https://xcbeyond.cn/notice/notice-3/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/notice/notice-3/</guid>
      <description>About Notice Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Teaching Materials and Testing Methods</title>
      <link>https://xcbeyond.cn/notice/notice-4/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/notice/notice-4/</guid>
      <description>About Notice Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Teaching Materials and Testing Methods</title>
      <link>https://xcbeyond.cn/notice/notice-5/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/notice/notice-5/</guid>
      <description>About Notice Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Teaching Materials and Testing Methods</title>
      <link>https://xcbeyond.cn/notice/notice-6/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/notice/notice-6/</guid>
      <description>About Notice Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Vlogging</title>
      <link>https://xcbeyond.cn/course/course-6/</link>
      <pubDate>Sat, 06 Jul 2019 15:27:17 +0600</pubDate>
      
      <guid>https://xcbeyond.cn/course/course-6/</guid>
      <description>About Course Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Alex Rook</title>
      <link>https://xcbeyond.cn/teacher/alex-rook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xcbeyond.cn/teacher/alex-rook/</guid>
      <description>About Me Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>CHEMICAL ENGINEERING</title>
      <link>https://xcbeyond.cn/scholarship/scholarship-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xcbeyond.cn/scholarship/scholarship-1/</guid>
      <description> institutes Smart-affiliated research Digital Access to Scholarship Smart Catalyst Smart Library Portal Smart research programs  </description>
    </item>
    
    <item>
      <title>CHEMICAL ENGINEERING</title>
      <link>https://xcbeyond.cn/scholarship/scholarship-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xcbeyond.cn/scholarship/scholarship-2/</guid>
      <description> institutes Smart-affiliated research Digital Access to Scholarship Smart Catalyst Smart Library Portal Smart research programs  </description>
    </item>
    
    <item>
      <title>CHEMICAL ENGINEERING</title>
      <link>https://xcbeyond.cn/scholarship/scholarship-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xcbeyond.cn/scholarship/scholarship-3/</guid>
      <description> institutes Smart-affiliated research Digital Access to Scholarship Smart Catalyst Smart Library Portal Smart research programs  </description>
    </item>
    
    <item>
      <title>Clark Malik</title>
      <link>https://xcbeyond.cn/teacher/clark-malik/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xcbeyond.cn/teacher/clark-malik/</guid>
      <description>About Me Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Devid Luis</title>
      <link>https://xcbeyond.cn/teacher/devid-luis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xcbeyond.cn/teacher/devid-luis/</guid>
      <description>About Me Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Duis Rio</title>
      <link>https://xcbeyond.cn/teacher/duis-rio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xcbeyond.cn/teacher/duis-rio/</guid>
      <description>About Me Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>Jacke Mastio</title>
      <link>https://xcbeyond.cn/teacher/jacke-mastio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xcbeyond.cn/teacher/jacke-mastio/</guid>
      <description>About Me Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
    <item>
      <title>John doe</title>
      <link>https://xcbeyond.cn/author/john-doe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xcbeyond.cn/author/john-doe/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin sit amet vulputate augue.</description>
    </item>
    
    <item>
      <title>Mark Dinn</title>
      <link>https://xcbeyond.cn/author/mark-dinn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xcbeyond.cn/author/mark-dinn/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin sit amet vulputate augue.</description>
    </item>
    
    <item>
      <title>Zim Cook</title>
      <link>https://xcbeyond.cn/teacher/zim-cook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xcbeyond.cn/teacher/zim-cook/</guid>
      <description>About Me Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</description>
    </item>
    
  </channel>
</rss>
